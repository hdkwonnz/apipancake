# https://github.com/aschmelyun/docker-compose-laravel
# https://mindsers.blog/post/https-using-nginx-certbot-docker/
version: "3.8"

services:
    nginx:
        image: live-www
        build:
            context: ./nginx/dockerfile
            dockerfile: Dockerfile
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - 443:443
        volumes:
            - ./../:/var/www/api
            - ./logs:/var/log/nginx
            #### uncomment below code for dry run
            - ./certbot/www:/var/www/certbot/:ro
            #### uncomment below code after dry run
            - ./certbot/conf/:/etc/nginx/ssl/:ro
        depends_on:
            - mysql
            - redis
            - php
        networks:
            - laravel
        environment:
            APP_ENV: local
            CONTAINER_ROLE: app
            CACHE_DRIVER: redis
            SESSION_DRIVER: redis
            QUEUE_DRIVER: redis
            REDIS_HOST: redis
    certbot:
        image: certbot/certbot:latest
        volumes:
            #### uncomment below code for dry run
            - ./certbot/www/:/var/www/certbot/:rw
            #### uncomment below code after dry run
            - ./certbot/conf/:/etc/letsencrypt/:rw

    php:
        image: live-php
        build:
            context: ./nginx/dockerfile
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        container_name: php
        restart: unless-stopped
        volumes:
            - ./../:/var/www/api
        networks:
            - laravel

    redis:
        image: "redis:alpine"
        container_name: redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        volumes:
            - 'redis:/data'
        networks:
            - laravel

    mysql:
        image: 'mysql/mysql-server:8.0'
        container_name: mysql
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: api_pancake
            MYSQL_USER: sail
            MYSQL_PASSWORD: Strong@&_password35M
            MYSQL_ROOT_PASSWORD: Strong@&_password35M
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
            TZ: "Pacific/Auckland"
        volumes:
            - "mysql:/var/lib/mysql"
        networks:
            - laravel
networks:
    laravel:
        driver: bridge
volumes:
    mysql:
        driver: local
    redis:
        driver: local
