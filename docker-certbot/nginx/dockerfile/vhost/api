## https://mindsers.blog/post/https-using-nginx-certbot-docker/
server {
#### must add below code after installing certbot
#### do not add below code for dry run
if ($host = www.apipancake.online) {
return 301 https://$host$request_uri;
}
if ($host = apipancake.online) {
return 301 https://$host$request_uri;
}

listen 80;
index index.php index.html;

server_name apipancake.online www.apipancake.online;

root /var/www/api/public;

location / {
try_files $uri $uri/ /index.php?$query_string;
}

########for certbot########
location /.well-known/acme-challenge/ {
root /var/www/certbot;
}

location ~ \.php$ {
try_files $uri =404;
fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_pass php:9000;
fastcgi_index index.php;
include fastcgi_params;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param PATH_INFO $fastcgi_path_info;
}
}

#### must add following code after installing certbot
#### do not add below code for dry run
#### then docker-compose down, then docker-compose up -d --build
#### error will be coming on php stage, then quit procedure
#### then docker-compose up -d

server {
listen 443 ssl http2;
listen [::]:443 ssl http2;

index index.php index.html;

server_name apipancake.online www.apipancake.online;

root /var/www/api/public;

location / {
try_files $uri $uri/ /index.php?$query_string;
}

ssl_certificate /etc/nginx/ssl/live/apipancake.online/fullchain.pem;
ssl_certificate_key /etc/nginx/ssl/live/apipancake.online/privkey.pem;

location ~ \.php$ {
try_files $uri =404;
fastcgi_split_path_info ^(.+\.php)(/.+)$;
fastcgi_pass php:9000;
fastcgi_index index.php;
include fastcgi_params;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
fastcgi_param PATH_INFO $fastcgi_path_info;
}
}
